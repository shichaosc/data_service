from django.db import models


class AdsMdmParent(models.Model):
    ds = models.CharField(max_length=8, help_text='数据日期 数据时间,yyyymmdd', primary_key=True)
    parent_user_id = models.BigIntegerField(null=True, blank=True, help_text='家长标识')
    parent_user_name = models.CharField(max_length=100, null=True, blank=True, help_text='用户名称')
    phone = models.CharField(max_length=30, null=True, blank=True, help_text='电话')
    email = models.CharField(max_length=100, null=True, blank=True, help_text='邮箱')
    real_name = models.CharField(max_length=128, null=True, blank=True, help_text='用户真实姓名')
    gender_id = models.IntegerField(null=True, blank=True, help_text='性别编号')
    gender_desc = models.CharField(max_length=10, null=True, blank=True, help_text='性别描述')
    avatar = models.CharField(max_length=256, null=True, blank=True, help_text='用户头像')
    nationality_code = models.CharField(max_length=30, null=True, blank=True, help_text='国籍编码')
    nationality_desc = models.CharField(max_length=30, null=True, blank=True, help_text='国籍描述')
    residence_country_code = models.CharField(max_length=30, null=True, blank=True, help_text='居住国家编码')
    residence_country_desc = models.CharField(max_length=30, null=True, blank=True, help_text='居住国家描述')
    currency_code = models.CharField(max_length=30, null=True, blank=True, help_text='货币编码')
    currency_desc_cn = models.CharField(max_length=30, null=True, blank=True, help_text='货币中文描述')
    prefer_language_code = models.CharField(max_length=30, null=True, blank=True, help_text='偏好语言编码')
    prefer_language_name = models.CharField(max_length=30, null=True, blank=True, help_text='偏好语言名称')
    whatsapp = models.CharField(max_length=256, null=True, blank=True, help_text='whatsapp用户名')
    # balance_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='账户课时余额')
    # bonus_balance_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='平台奖励课时余额')
    # sg_balance_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='平台奖励课时余额')
    referrer_user_identify = models.CharField(max_length=100, null=True, blank=True, help_text='推荐人用户身份标识')
    referrer_user_id = models.BigIntegerField(null=True, blank=True, help_text='推荐人用户标识')
    cc_user_id = models.IntegerField(null=True, blank=True, help_text='顾问用户标识')
    lp_user_id = models.IntegerField(null=True, blank=True, help_text='学管用户标识')
    last_login_tz = models.CharField(max_length=100, null=True, blank=True, help_text='上次登录时区')
    last_login_time = models.DateTimeField(null=True, blank=True, help_text='上次登录时间')
    login_tz = models.CharField(max_length=100, null=True, blank=True, help_text='最近登录时区')
    login_time = models.DateTimeField(null=True, blank=True, help_text='最新登录时间')
    user_status_id = models.IntegerField(null=True, blank=True, help_text='用户状态编号')
    user_status_desc = models.CharField(max_length=100, null=True, blank=True, help_text='用户状态编号')
    is_staff = models.IntegerField(null=True, blank=True, help_text='是否公司员工')
    create_time = models.DateTimeField(null=True, blank=True, help_text='创建时间')
    balance_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='剩余课时')
    general_balance_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='剩余标准课时')
    special_balance_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='剩余定向课时')
    order_num = models.IntegerField(null=True, blank=True, help_text='订单数量')
    order_amt_currency_cny = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='订单金额(人民币)')
    order_amt_currency_first_order = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='订单金额(首单币种)')
    order_lesson_point_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='订单课时总数')
    first_order_currency_code = models.CharField(max_length=3, null=True, blank=True, help_text='首单币种编码')
    first_order_unit_price = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='首单单价')
    first_order_time = models.DateTimeField(null=True, blank=True, help_text='首单时间')
    first_order_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='首单总金额')
    first_order_lesson_point_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='首单总课时')
    latest_order_time = models.DateTimeField(null=True, blank=True, help_text='最近一单时间')
    latest_order_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='最近一单金额')
    latest_order_lesson_point_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='最近一单总课时')
    latest_order_date = models.DateTimeField(null=True, blank=True, help_text='最近一单日期')
    is_order = models.IntegerField(null=True, blank=True, help_text='是否有订单')
    student_num = models.IntegerField(null=True, blank=True, help_text='添加学生数')
    active_student_num = models.IntegerField(null=True, blank=True, help_text='上课学生数')
    trail_class_create_time = models.DateTimeField(null=True, blank=True, help_text='试听课创建时间')
    trail_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='试听课出席时间')
    first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='首次课创建时间')
    first_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='首次课出席时间')
    latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='最近一次课创建时间')
    latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='最近一次课出席时间')
    finish_class_times = models.IntegerField(null=True, blank=True, help_text='完课次数')
    type1_first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='1对1首次课创建时间')
    type1_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='1对1首次课出席时间')
    type1_latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='1对1最近一次课创建时间')
    type1_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='1对1最近一次课出席时间')
    type1_finish_class_times = models.IntegerField(null=True, blank=True, help_text='1对1完课次数')
    type2_first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='小班课首次课创建时间')
    type2_first_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='小班课首次课出席时间')
    type2_latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='小班课最近一次课创建时间')
    type2_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='小班课最近一次课出席时间')
    type2_finish_class_times = models.IntegerField(null=True, blank=True, help_text='小班课完课次数')
    type3_first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='大班课首次课创建时间')
    type3_first_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='大班课首次课到达时间')
    type3_latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='大班课最近一次课创建时间')
    type3_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='大班课最近一次课到达时间')
    type3_finish_class_times = models.IntegerField(null=True, blank=True, help_text='大班课完课次数')
    data_time = models.DateTimeField(null=True, blank=True)
    cc_user_name = models.CharField(max_length=63, null=True, blank=True, help_text='顾问中文名称')
    cc_user_realname = models.CharField(max_length=63, null=True, blank=True, help_text='顾问真实名称')
    lp_user_name = models.CharField(max_length=63, null=True, blank=True, help_text='学管中文名称')
    lp_user_realname = models.CharField(max_length=63, null=True, blank=True, help_text='学管真实名称')
    ambassador_code = models.CharField(max_length=30, null=True, blank=True, help_text='城市合伙人码')

    class Meta:
        db_table = 'ads_mdm_parent'
