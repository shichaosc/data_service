from django.db import models


class AdsMdmStudent(models.Model):
    ds = models.CharField(max_length=8, help_text='数据日期 数据时间,yyyymmdd', primary_key=True)
    student_user_id = models.BigIntegerField(null=False, blank=False, help_text='学生标识')
    avatar = models.CharField(max_length=256, null=True, blank=True, help_text='用户头像')
    real_name = models.CharField(max_length=128, null=True, blank=True, help_text='用户名称')
    gender_id = models.SmallIntegerField(null=True, blank=True, help_text='性别编码')
    gender_desc = models.CharField(max_length=30, null=True, blank=True, help_text='性别描述')
    age = models.IntegerField(help_text='年龄', null=True, blank=True)
    birthday = models.DateTimeField()
    parent_user_id = models.BigIntegerField(null=False, blank=False)
    parent_user_name = models.CharField(max_length=50, null=True, blank=True, help_text='家长姓名')
    course_id = models.IntegerField(null=True, blank=True, help_text='课程标识')
    course_name = models.CharField(max_length=100, null=True, blank=True, help_text='课程名称')
    edition_id = models.IntegerField(null=True, blank=True, help_text='版本标识')
    edition_name = models.CharField(max_length=100, null=True, blank=True, help_text='版本名称')
    course_level = models.IntegerField(null=True, blank=True, help_text='课程级别')
    lesson_id = models.IntegerField(null=True, blank=True, help_text='每节课标识')
    lesson_no = models.IntegerField(null=True, blank=True, help_text='每节课编号')
    unit_no = models.IntegerField(null=True, blank=True, help_text='单元编号')
    assessed_type_id = models.IntegerField(null=True, blank=True, help_text='水平测试标识')
    assessed_type_desc = models.CharField(max_length=100, null=True, blank=True, help_text='水平测试名称')
    is_first_course = models.IntegerField(null=True, blank=True, help_text='是否首次课')
    virtualclass_type_id = models.IntegerField(null=True, blank=True, help_text='课堂类型编号')
    virtualclass_type_desc = models.CharField(max_length=30, null=True, blank=True)
    is_allow_smallclass = models.IntegerField(null=True, blank=True, help_text='是否开启小班')
    is_only_smallclass = models.IntegerField(null=True, blank=True, help_text='是否上固定小班课')
    user_status_id = models.IntegerField(null=True, blank=True, help_text='用户状态编号')
    user_status_desc = models.CharField(max_length=30, null=True, blank=True, help_text='用户状态描述')
    create_time = models.DateTimeField(null=True, blank=True, help_text='创建时间')
    questionnaire_edition_id = models.IntegerField(null=True, blank=True, help_text='家长测试版本编号')
    questionnaire_edition_desc = models.CharField(max_length=100, null=True, blank=True, help_text='家长测试版本描述')
    questionnaire_level = models.IntegerField(null=True, blank=True, help_text='家长测试级别')
    order_num = models.IntegerField(null=True, blank=True, help_text='订单数量')
    order_amt_currency_cny = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='订单金额(人民币)')
    order_amt_currency_first_order = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='订单金额(首单币种)')
    order_lesson_point_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='订单课时总数')
    first_order_currency_code = models.CharField(max_length=3, null=True, blank=True, help_text='首单币种编码')
    first_order_unit_price = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='首单单价')
    first_order_time = models.DateTimeField(null=True, blank=True, help_text='首单时间')
    first_order_date = models.DateField(null=True, blank=True, help_text='首单日期')
    first_order_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='首单总金额')
    first_order_lesson_point_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='首单总课时')
    latest_order_time = models.DateTimeField(null=True, blank=True, help_text='最近一单时间')
    latest_order_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='最近一单金额')
    latest_order_lesson_point_amt = models.DecimalField(max_digits=18, decimal_places=6, null=True, blank=True, help_text='最近一单总课时')
    is_order = models.IntegerField(null=True, blank=True, help_text='是否有订单')
    trail_class_create_time = models.DateTimeField(null=True, blank=True, help_text='试听课创建时间')
    trail_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='试听课出席时间')
    first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='首次课创建时间')
    first_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='首次课出席时间')
    latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='最近一次课创建时间')
    latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='最近一次课出席时间')
    finish_class_times = models.IntegerField(null=True, blank=True, help_text='完课次数')
    type1_first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='1对1首次课创建时间')
    type1_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='1对1首次课出席时间')
    type1_latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='1对1最近一次课创建时间')
    type1_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='1对1最近一次课出席时间')
    type1_finish_class_times = models.IntegerField(null=True, blank=True, help_text='1对1完课次数')
    type2_first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='小班课首次课创建时间')
    type2_first_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='小班课首次课出席时间')
    type2_latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='小班课最近一次课创建时间')
    type2_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='小班课最近一次课出席时间')
    type2_finish_class_times = models.IntegerField(null=True, blank=True, help_text='小班课完课次数')
    type3_first_class_create_time = models.DateTimeField(null=True, blank=True, help_text='大班课首次课创建时间')
    type3_first_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='大班课首次课到达时间')
    type3_latest_class_create_time = models.DateTimeField(null=True, blank=True, help_text='大班课最近一次课创建时间')
    type3_latest_class_attend_time = models.DateTimeField(null=True, blank=True, help_text='大班课最近一次课到达时间')
    type3_finish_class_times = models.IntegerField(null=True, blank=True, help_text='大班课完课次数')
    data_time = models.DateTimeField(null=True, blank=True)

    class Meta:
        db_table = 'ads_mdm_student'
        unique_together = ("ds", "student_user_id")


